import "JsonClassFactory.idl";
import "FacebookResult.idl";

namespace FacebookSDK
{
	runtimeclass FacebookPaginatedArray
	{
		/**
		 * Constructor.
		 * @param Request The Graph API endpoint
		 * @param Parameters Additional parameters that the Graph call may require
		 * @param ObjectFactory Factory to create object from the response data
		 */
		FacebookPaginatedArray(
			String Request,
			Windows.Foundation.Collections.PropertySet Parameters,
			JsonClassFactory ObjectFactory
			);

		/**
		 * Tries to get the first set of response objects from Facebook for the
		 * Graph API call. Sets Current to the same IVectorView that is returned
		 * by the FBResult on a successful call.
		 * @exception InvalidArgumentException if ObjectFactory is unable to
		 * instantiate the object it creates from the JSON values returned
		 * from the Graph call.
		 * @return FBResult object that encapsulates an IVectorView<Object^>^
		 * where the Object^ can be cast to the object created by
		 * ObjectFactory, if call was successful.
		 */
		Windows.Foundation.IAsyncOperation<FacebookResult> FirstAsync();

		/**
		 * Tries to get the next set of response objects from Facebook for the
		 * Graph API call. Sets Current to the same IVectorView that is returned
		 * by the FBResult on a successful call. Should only be called after
		 * FirstAsync has been called.
		 * @exception InvalidArgumentException if the current page does not
		 * have a next page. This will also be be thrown if NextAsync is
		 * called before FirstAsync. This will also be thrown if ObjectFactory
		 * is unable to instantiate the object it creates from the JSON values
		 * returned from the Graph call.
		 * @return FBResult object that encapsulates an IVectorView<Object^>^
		 * where the Object^ can be cast to the object created by
		 * ObjectFactory, if call was successful.
		 */
		Windows.Foundation.IAsyncOperation<FacebookResult> NextAsync();

		/**
		 * Tries to get the previous set of response objects from Facebook for the
		 * Graph API call. Sets Current to the same IVectorView that is returned
		 * by the FBResult on a successful call. Should only be called after
		 * FirstAsync has been called.
		 * @exception InvalidArgumentException if the current page does not
		 * have a previous page. This will also be be thrown if PreviousAsync is
		 * called before FirstAsync. This will also be thrown if ObjectFactory
		 * is unable to instantiate the object it creates from the JSON values
		 * returned from the Graph call.
		 * @return FBResult object that encapsulates an IVectorView<Object^>^
		 * where the Object^ can be cast to the object created by
		 * ObjectFactory, if call was successful.
		 */
		Windows.Foundation.IAsyncOperation<FacebookResult> PreviousAsync();

		/**
		 * The current collection of objects that were returned by a call
		 * to FirstAsync, NextAsync, or PreviousAsync. The objects stored in
		 * the IVectorView will have the type of the objects created by
		 * ObjectFactory.
		 */
		Windows.Foundation.Collections.IVectorView<Object> Current
		{
			/**
			 * Gets the current collection of objects from the most recently
			 * queried page.
			 * @exception InvalidArgumentException if no page is the current page.
			 * @return An IVectorView^ of Object^ of the type created by
			 * ObjectFactory
			 */
			get;
		};

		/**
		* The current collection of objects that were returned by a call
		* to FirstAsync, NextAsync, or PreviousAsync. This is the raw string
		* of the "data" value.
		*/
		String CurrentDataString
		{
			/**
			* Gets the current collection of objects from the most recently
			* queried page, in the raw string format.
			* @exception InvalidArgumentException if no page is the current page.
			* @returnPlatform::String^ of the data
			*/
			get;
		};

		/**
		 * Indicates if the Graph call successfully returned a page of data
		 * that was successfully converted by ObjectFactory.
		 */
		Boolean HasCurrent
		{
			get;
		};

		Boolean HasNext
		{
			get;
		};

		Boolean HasPrevious
		{
			get;
		};

		Windows.Foundation.Collections.IVectorView<Object>
		ObjectArrayFromWebResponse(
			String Response,
			JsonClassFactory classFactory
		);
	}
}
