<#@ assembly name="System.Xml" #>
<#@ import namespace="System.Xml" #>
<#
    XmlDocument doc = new XmlDocument();
    doc.Load(classDefFile);

    XmlNode rootNode = doc.SelectSingleNode("class");

    string className = rootNode.Attributes["name"].Value;
    bool bindable = ((rootNode.Attributes["bindable"] != null) && 
        rootNode.Attributes["bindable"].Value.Equals("yes"));
#>
#pragma once
//------------------------------------------------------------------------------
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//------------------------------------------------------------------------------

<#
    XmlNodeList props = rootNode.SelectNodes("property");
    for (int i = 0; i < props.Count; i++)
    {
        XmlNode prop = props[i];
        string varType = prop.Attributes["type"].Value;
        if (varType.Equals("fbclass"))
        {
            string memberClassName = prop.Attributes["className"].Value;
#>
#include "<#= memberClassName #>.h"
<#
        }
    }
#>

#include "Graph.<#= className #>.g.h"

namespace winrt::FacebookSDK::Graph::implementation
{
<#
    string interfaces = "";
    if (bindable)
    {
        interfaces += 
            ":\n            Windows::UI::Xaml::Data::INotifyPropertyChanged";
#>
    [Windows::Foundation::Metadata::WebHostHidden]
    [Windows::UI::Xaml::Data::Bindable]
<#
    }
#>
    struct <#= className #> : <#= className #>T<<#= className #>>
    {
        public:
<#
    if (bindable)
    {
#>
        virtual event Windows::UI::Xaml::Data::PropertyChangedEventHandler^ 
            PropertyChanged;

<#
    }
#>
        static winrt::Windows::Foundation::IInspectable FromJson(
            winrt::hstring const& JsonText
        );

<#

    foreach (XmlNode child in rootNode.SelectNodes("property"))
    {
        string fullType = FullTypeFor(child);
        string propName  = PropNameFor(child);
#>
        <#= fullType #> <#= propName #>();
        void <#= propName #>(<#= fullType#> const& value);

<#
    }
#>
    private:

<#
    if (bindable)
    {
#>
        void NotifyPropertyChanged(
            winrt::hstring prop
            );

<#
    }

    foreach (XmlNode child in rootNode.SelectNodes("property"))       
    {
        string fullType = FullTypeFor(child);
        string varName  = MemberNameFor(child);
#>
        <#= fullType #> <#= varName #>;
<#
    }
#>
    };
}

namespace winrt::FacebookSDK::Graph::factory_implementation
{
	struct <#= className #> : <#= className #>T<<#= className #>, implementation::<#= className #>>
	{
	};
}

<#@ include file="Utility.ttinclude" #>
