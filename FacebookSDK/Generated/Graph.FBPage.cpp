//------------------------------------------------------------------------------
//
// Copyright (c) 2015 Microsoft Corporation. All rights reserved.
//
// This code is licensed under the MIT License (MIT).
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//
//------------------------------------------------------------------------------
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//------------------------------------------------------------------------------

#include "pch.h"
#include "Graph.FBPage.h"

using namespace winrt;
using namespace FacebookSDK;
using namespace FacebookSDK::Graph;
using namespace winrt::Windows::Data::Json;
using namespace winrt::Windows::Foundation::Collections;

namespace winrt::FacebookSDK::Graph::implementation
{
	hstring FBPage::Id()
	{
		return _id;
	}
	void FBPage::Id(hstring const& value)
	{
		_id = value;
	}

	hstring FBPage::Category()
	{
		return _category;
	}
	void FBPage::Category(hstring const& value)
	{
		_category = value;
	}

	int FBPage::Checkins()
	{
		return _checkins;
	}
	void FBPage::Checkins(int const& value)
	{
		_checkins = value;
	}

	hstring FBPage::Description()
	{
		return _description;
	}
	void FBPage::Description(hstring const& value)
	{
		_description = value;
	}

	int FBPage::Likes()
	{
		return _likes;
	}
	void FBPage::Likes(int const& value)
	{
		_likes = value;
	}

	hstring FBPage::Link()
	{
		return _link;
	}
	void FBPage::Link(hstring const& value)
	{
		_link = value;
	}

	hstring FBPage::Name()
	{
		return _name;
	}
	void FBPage::Name(hstring const& value)
	{
		_name = value;
	}

	winrt::Windows::Foundation::IInspectable FBPage::FromJson(
		hstring const& JsonText
	)
	{
		auto result = winrt::make_self<FBPage>();
		int found = 0;
		JsonValue val{ nullptr };

		if (JsonValue::TryParse(JsonText, val))
		{
			if (val.ValueType() == JsonValueType::Object)
			{
				JsonObject obj = val.GetObject();
				for (auto&& current : obj)
				{
					winrt::hstring key = current.Key();
					if (key == L"id")
					{
						found++;
						result->Id(current.Value().GetString());
					}
					else if (key == L"category")
					{
						found++;
						result->Category(current.Value().GetString());
					}
					else if (key == L"checkins")
					{
						found++;
						result->Checkins(static_cast<int>(current.Value().GetNumber()));
					}
					else if (key == L"description")
					{
						found++;
						result->Description(current.Value().GetString());
					}
					else if (key == L"likes")
					{
						found++;
						result->Likes(static_cast<int>(current.Value().GetNumber()));
					}
					else if (key == L"link")
					{
						found++;
						result->Link(current.Value().GetString());
					}
					else if (key == L"name")
					{
						found++;
						result->Name(current.Value().GetString());
					}
				}
			}
		}
		return result.as<IInspectable>();// .as<winrt::Windows::Foundation::IInspectable>();
	}
}